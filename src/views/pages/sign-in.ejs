<!DOCTYPE html>
<html lang="en">

<head>
  <%- include('../partials/head') %>
</head>

<body>
  <header>
    <!-- <%- include('../partials/nav', { hideSignIn: true }) %> -->
  </header>


  <!-- <form id="login-form">
    <input type="text" name="login" placeholder="Your user name" />
    <input type="password" name="password" id="password" />
    <button>
      Sign In
    </button>
    <div id="login-error">

    </div>
    </div>
  </form> -->
 

  <div class="task-container columns is-multiline">
    <div  class="card column is-half is-offset-one-quarter has-text-centered">
      <form id="login-form" >
        <input type="text" name="login" placeholder="Your user name" />
        <br>
        <input type="password" name="password" id="password" />
        <button>
          Sign In
        </button>
        <div id="login-error">
    
        </div>
        </div>
      </form>
    </div>
</div>
</body>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-app-compat.js"></script>
<script src="https://www.gstatic.com/firebasejs/9.6.4/firebase-auth-compat.js"></script>




<script>



  window.onload = () => {
    const firebaseConfig = {
      // CS5356 TODO #2
      apiKey: "AIzaSyBVSkGDVf0zYR2pPKQASc8yiCu5dBr3Rpc",
      authDomain: "ourworld-7d07d.firebaseapp.com",
      projectId: "ourworld-7d07d",
      storageBucket: "ourworld-7d07d.appspot.com",
      messagingSenderId: "964947280134",
      appId: "1:964947280134:web:c8d5dc605816a19ba35e87",
      measurementId: "G-27RVR7708T"
    };

    const app = firebase.initializeApp(firebaseConfig);

    app.auth().setPersistence(firebase.auth.Auth.Persistence.NONE);

    document
      .getElementById("login-form")
      .addEventListener("submit", (event) => {
        event.preventDefault();
        const login = event.target.login.value;
        const password = event.target.password.value;

        // CS5356 TODO #3
        // Sign in using the Firebase SDK for Web
        // Get the users ID token
        // Start a new session with the users ID token
        // Redirect the user to the /dashboard

        app.auth().signInWithEmailAndPassword(login, password)
          .then((userCredential) => {
            // Signed in 
            const user = userCredential.user;
            // ...
            user.getIdToken().then((idToken) => {
              fetch('/sessionLogin', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ idToken })
              }).then(() => {
                window.location.href = '/dashboard'
              })
            })
          })
        return false;
      });
  };
</script>

</html>